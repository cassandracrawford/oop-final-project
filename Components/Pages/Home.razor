@page "/"
@using FinalProject.Data
@using Microsoft.Data.SqlClient
@inject NavigationManager Navigation
@inject DatabaseConnection dbConnection

<!-- Login Form -->
<div class="center-container">
    <div class="login">
    <h1>Village Rental</h1>
    <p>Management System</p>
    <form>
        <div class="mb-3">
            <label for="employeeID" class="form-label">Employee ID</label>
            <input type="text" class="form-control" id="employeeID" @bind="employeeID" required />
        </div>
        <div class="mb-3">
            <label for="employeePaswoprd" class="form-label">Password</label>
            <input type="password" class="form-control" id="employeePassword" @bind="employeePW" required>
        </div>
        <div class="button-container">
        <button type="button" class="login-button" @onclick="CheckLogin">Login</button>
        </div>
    </form>
    <hr/>
    <p class="system-version">System Version 1.0</p>
    </div>
</div>

<!-- Display toast notification for any error message -->
@if (!string.IsNullOrEmpty(displayMessage))
{
    <div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 1055;">
        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header custom-toast-header">
                <strong class="me-auto">Notification</strong>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @displayMessage
            </div>
        </div>
    </div>
}

@code {
    private int? employeeID = null;
    private string employeePW = string.Empty;
    private string displayMessage = string.Empty; // Message to be displayed in the toast notification

    // To validate the login details of the employee
    private void CheckLogin()
    {
        try
        {
            // Creates an Employee object to hold the login details
            var employee = new Employee
                {
                    EmployeeID = employeeID ?? 0,
                    Password = employeePW
                };
            // Uses the Login method from DatabaseConnection to check the employee details
            bool isLoginValid = dbConnection.Login(employee);

            if (!isLoginValid)
            {
                // Throws an error if employee id and/or password are incorrect
                throw new InvalidLoginDetailsException();
            }
            else
            {
                Navigation.NavigateTo("/dashboard"); // If login is successful, page will be redirected to Dashboard
            }
        }
        catch (InvalidLoginDetailsException e)
        {
            displayMessage = e.Message; // Displays the error message if login details are incorrect
        } catch (SqlException e)
        {
            displayMessage = "Database connection failed.";
        }
        catch (Exception e)
        {
            displayMessage = e.Message; // Displays generic exception messages
        }
    }
    
    // Hides and clear the toast nofitication after 5 seconds
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
         if (!string.IsNullOrEmpty(displayMessage))
         {
            await Task.Delay(5000); 
            displayMessage = null; 
            StateHasChanged(); 
         }
    }
}
